# To learn how to migrate your existing application to .NET Core,
# refer to https://docs.microsoft.com/en-us/dotnet/desktop-wpf/migration/convert-project-from-net-framework
#
# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: ModelMod

on:
  push:
    branches: [ "master", "ci-update" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: windows-2019  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      VSINSTALLDIR: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise
      VsInstallRoot: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise
      VisualStudioVersion: 16.0
      MSBuild: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin
      # this should speed up cargo eventually but the Rust version on this build image
      # doesn't support it properly yet (and fails if specified)
      #CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Checkout TPLib
      uses: actions/checkout@v3
      with:
        # this key will expire 3/13/2024 after which I can either create a new one for this repo
        # (just needs read access) or disable this step entirely to build without the TPLib files.
        # (I can then download the package and put them in the zip manually)
        repository: jmquigs/ModelModTPLib
        token: ${{ secrets.MMTPLIBCIKEY }}
        path: TPLib

    - name: Set path (fsharp tools)
      run: echo "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\FSharp\Tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    # note: this run number doesn't change if the build is re-run.  github doesn't appear to offer a number that
    # increases permanently each time the action is run (there is run attempt, but it always starts from 1 for a new build)
    - name: Set build number env var to github.run_number
      run: echo "CI_BUILD_NUMBER=${{ github.run_number }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      #echo ${{ github.run_number }} | Out-File -FilePath $env:CI_BUILD_NUMBER -Encoding utf8 -Append

    # don't need this right now, because i'm not on .Net core
    # Install the .NET Core workload
    #- name: Install .NET Core
    #  uses: actions/setup-dotnet@v3
    #  with:
    #    dotnet-version: 6.0.x

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: .\installdeps.bat nopause

    - name: Run FSI to setup build dir
      run: fsi build.fsx
      env:
        TARGET: actionsetup

    # this adds an extremely old and incompatible version to the path without the version
    # qualifier, but then the version qualifier didn't failed to find it.  So I just set the
    # MSBuild env var above and Fake picks that up
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    #- name: Setup MSBuild.exe
    #  uses: microsoft/setup-msbuild@v1.1
      #with:
      #  vs-version: '[16.0,16.11]'

    - name: Run build
      run: fsi build.fsx
      env:
        TARGET: AppveyorBuild

    - name: Run tests
      run: fsi build.fsx
      env:
        TARGET: AppveyorTest

    - name: Run package
      run: fsi build.fsx
      env:
        TARGET: AppveyorPackage

    - name: Store package
      uses: actions/upload-artifact@v3
      with:
        name: ModelModArchive
        path: deploy/*.zip

    # disabling this for now since I always prefer to download the archive and smoke test it myself
    # before making a release, and I don't want to run the a rebuild (which would generate new artifacts) as part of
    # release tag.

    #- name: Release
    #  uses: softprops/action-gh-release@v1
    #  if: startsWith(github.ref, 'refs/tags/')
    #  with:
    #    files: deploy/*.zip
